name: Go CI

on: [push]
env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: "wallerapi"
jobs:
    check_quality:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                go-version: ['1.21.8', '1.22.1']
        steps:
            - uses: actions/checkout@v4
            - name: Setup Go ${{ matrix.go-version }}
              uses: actions/setup-go@v4
              with:
                  go-version: ${{ matrix.go-version }}
            - name: Display Go version
              run: go version
            - name: Install dependencies
              run: go get .
            - name: Build
              run: go build -v
            - name: Test with the Go CLI
              run: go test -v ./...
            - name: Static code analysis
              run: go vet ./... 
    pack_container:
      needs: check_quality
      runs-on: ubuntu-latest   
      outputs:
        image_tag: ${{ steps.meta.outputs.tags }}  For CD Propose
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
          
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ vars.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
                      
          - name: Docker meta
            id: meta
            uses: docker/metadata-action@v5
            with:
              images: |
                ${{ vars.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
              tags: |
                type=sha,prefix=dev-

          - name: Build and push Docker image
            id: build-and-push
            uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
            with:
              #push: ${{ github.event_name != 'pull_request' }}
              push: true
              tags: ${{ steps.meta.outputs.tags }}
              labels: ${{ steps.meta.outputs.labels }}